{"version":3,"sources":["backend.js","App.js","serviceWorker.js","index.js"],"names":["math","require","GraphState","inpAdjacencyMatrix","size","matrix","Error","this","numVerticies","i","j","adjacencyMatrix","singlestate","sqrt","state","n","kron","edges","edge","console","log","cZ","a","out","valueOf","concat","subset","index","gate","multiply","b","identityMatrix","p0","p1","pauliZ","gateP1","gateP2","add","adj","neighbors","aSet","bSet","bigE","pair","b0","isIn","set","element","length","delta","arrA","arrB","filter","x","y","intersectb0a","includes","up","Set","finalEdges","innerArrayReverser","warn","indexFormat","pow","toString","padStart","Button","id","props","isSelected","className","onClick","e","handleClick","src","alt","React","Component","FloatingToolBar","currentTool","selectedTool","clickHandler","colSpan","Particle","info","onUpdate","number","div","latest","animate","initialX","initialY","style","backgroundColor","borderRadius","width","height","position","top","left","border","drag","draggable","dragConstraints","particleBox","event","textAlign","verticalAlign","lineHeight","color","fontSize","pointerEvents","Edge","v1","firstVertex","v2","secondVertex","line","transition","duration","x1","y1","x2","y2","ParticleCanvas","g","positionTable","graph","mxhelper","undefined","edgehelper","particleClickHandler","bind","copyTable","xVal","yVal","setState","measureZ","measureY","measureX","newEdge","time","particlesToRender","edgesToRender","max","getAdjacencyMatrix","particleInfo","Math","floor","cos","PI","container","canDrag","push","key","node","table","timeEnd","newParticle","Page","page","createRef","toolbarClickHandler","target","getAttribute","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.46f7f1fb.chunk.js","sourcesContent":["var math = require('mathjs');\r\n\r\n\r\nexport default class GraphState{\r\n\r\n\r\n  neighbors(a){\r\n    var out = []\r\n    for(let i = 0; i < this.numVerticies; i++){\r\n      if (this.adjacencyMatrix.valueOf()[a][i] == 1){\r\n        out = out.concat(i);\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n\r\n  edges(){\r\n    var out = []\r\n    for(let i = 0; i < this.numVerticies; i++){\r\n      for (let j = i; j < this.numVerticies; j++){\r\n        if (math.subset(this.adjacencyMatrix,math.index(i,j)) == 1){\r\n          out=out.concat( [[i,j]] );\r\n        }\r\n      }\r\n    }\r\n    return out\r\n  }\r\n\r\n  oneQubitUnitary(matrix, a){\r\n    var gate = (a == 0) ? matrix : [[1,0],[0,1]]\r\n\r\n    //Prepares the tensor product of the unitary with a series of identity matricies such that (if applying to the k-th qubit of n qubits)\r\n    //the state is prepared as I₁ ⊗ I₂ ⊗ ... ⊗ Uₖ ⊗ Iₖ₊₁ ⊗ Iₖ₊₂ ⊗ ...\r\n\r\n    for (let i = 1; i < this.numVerticies; i++){\r\n      if(i == a){\r\n        gate = math.kron(gate,matrix)\r\n      }else{\r\n        gate = math.kron(gate,[[1,0],[0,1]])\r\n      }\r\n    }\r\n    //apply gate to state\r\n    this.state = math.multiply(gate,this.state);\r\n  }\r\n\r\n  cZ(a, b){\r\n    // TODO: clean up code and add comments/equations\r\n    //Controlled Z on qubits a and b with a as the control\r\n    let identityMatrix = math.matrix([[1,0],[0,1]]);\r\n    let p0 = math.matrix([[1,0],[0,0]]);\r\n    let p1 = math.matrix([[0,0],[0,1]]);\r\n    let pauliZ = math.matrix([[1,0],[0,-1]])\r\n\r\n    var gateP1 = (a == 0 ? p0 : identityMatrix);\r\n    for (let n = 1; n < this.numVerticies; n++){\r\n      gateP1 = (a == n ? math.kron(gateP1, p0) : math.kron(gateP1,identityMatrix));\r\n    }\r\n\r\n    let gateP2 = (a == 0 ? p1 : identityMatrix);\r\n\r\n    for (let n = 1; n < this.numVerticies; n++){\r\n      if(a == n){\r\n      gateP2 = math.kron(gateP2, p1);\r\n      } else if(b == n) {\r\n      gateP2 = math.kron(gateP2, pauliZ);\r\n      } else {\r\n      gateP2 = math.kron(gateP2, identityMatrix);\r\n      }\r\n    }\r\n    let gate = math.add(gateP1,gateP2);\r\n    this.state = math.multiply(gate, this.state);\r\n    console.log(\"completed cZ on edge (\"+a+\",\"+b+\")\")\r\n  }\r\n\r\n  measureZ(a){\r\n    /////////////////////////////////////////////////////////\r\n    // Feed-forward stuff. Handle later\r\n    ////////////////////////////////////////////////////////\r\n\r\n    // // Measures the a-th qubit with respect to the Z-Axis\r\n    // //\r\n    // function weightedRandom(prob) {\r\n    //   let i, sum=0, r=Math.random();\r\n    //   for (i in prob) {\r\n    //     sum += prob[i];\r\n    //     if (r <= sum) return i;\r\n    //   }\r\n    // }\r\n    //\r\n    // var probabilityZero = math.complex(0,0);\r\n    // var probabilityOne = math.complex(0,0);\r\n    //\r\n    // for (let i = 0; i < this.state.size()){\r\n    //   let index = i.toString(2);\r\n    //   if(parseInt(index[a],10) == 1 ){\r\n    //     probabilityOne = math.add(probabilityOne,this.state.subset(math.index(i,0)));\r\n    //   }\r\n    //   if( parseInt(index[a],10) == 0 ){\r\n    //     probabilityZero = math.add(probabilityZero,this.state.subset(math.index(i,0)));\r\n    //   }\r\n    // }\r\n    // probabilityOne = math.multiply(probabilityOne.conjugate(),probabilityOne).re;\r\n    // probabilityZero = math.multiply(probabilityZero.conjugate(),probabilityZero).re;\r\n    //\r\n    // let choice = weightedRandom({0:probabilityZero , 1:probabilityOne});\r\n    // let aState = (choice == 1) ? math.matrix([[0],[1]]) : math.matrix([[1],[0]]);\r\n    let adj = this.adjacencyMatrix.valueOf()\r\n    for(let n of this.neighbors(a)){\r\n      adj[a][n] = 0;\r\n      adj[n][a] = 0;\r\n    }\r\n    this.adjacencyMatrix = math.matrix(adj)\r\n\r\n\r\n  }\r\n\r\n  measureY(a){\r\n    let adj = this.adjacencyMatrix.valueOf()\r\n    function bigE(aSet,bSet){\r\n      let out = []\r\n      for(let a of aSet){ for(let b of bSet){ if (a != b){ out = out.concat([[a,b]]); }}}\r\n      return out;\r\n    }\r\n\r\n    for(let pair of bigE(this.neighbors(a),this.neighbors(a))){\r\n      adj[pair[0]][pair[1]] = 0;\r\n    }\r\n    this.adjacencyMatrix = math.matrix(adj)\r\n\r\n  }\r\n\r\n  measureX(a,b0){\r\n    function bigE(aSet,bSet){\r\n      let out = []\r\n      for(let a of aSet){ for(let b of bSet){ if (a != b){ out = out.concat([[a,b]]); }}}\r\n      return out;\r\n    }\r\n    function isIn (set,element){\r\n      //checks if an array (called element) is contained in an array of arrays (called set)\r\n      for(let i of set){\r\n        if(i.length == element.length){\r\n          for(let j = 0; j < i.length; j++){\r\n            if (i[j] != element[j]) break;\r\n            if (j == i.length-1 && i[j] == element[j]) return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    let delta = (arrA,arrB)  => {\r\n                                  return arrA.filter(x => !isIn(arrB,x))\r\n                                      .concat(arrB.filter(y  => !isIn(arrA,y)));\r\n                                }\r\n    function innerArrayReverser(x){\r\n      let out = []\r\n      for(let i=0; i<x.length; i++){\r\n        out = out.concat([x[i]]);\r\n        out = out.concat([[ x[i][1] , x[i][0] ]]);\r\n      }\r\n      return out;\r\n    }\r\n\r\n    //////////////////////////////\r\n    ///End of Helper Functions///\r\n    /////////////////////////////\r\n\r\n\r\n    let intersectb0a = this.neighbors(a).filter(x => this.neighbors(b0).includes(x)) // intersection of the neighbors of a and b0\r\n    let up = [... new Set([...this.neighbors(a),...this.neighbors(b0)])] //the union of neighbors of a and b0, to make the bigE calculation smoother\r\n    let totalEdge = innerArrayReverser(this.edges()) //edges and their reverses\r\n\r\n    var finalEdges = delta( delta( delta(totalEdge , bigE(up,up)) , bigE(intersectb0a,intersectb0a)) , bigE(this.neighbors(a),this.neighbors(a)))\r\n    console.log('finalEdges',finalEdges)\r\n\r\n    let adj = this.adjacencyMatrix.valueOf()\r\n\r\n//if the matrix element is not in the new edges list, set it to zero, otherwise, set it to one\r\n    for (let i=0; i<adj.length;i++){\r\n      for(let j=0; j<=i;j++){\r\n        if(!isIn(finalEdges,[i,j])){\r\n          adj[i][j] = 0;\r\n          adj[j][i] = 0;\r\n        } else {\r\n          adj[i][j] = 1;\r\n          adj[j][i] = 1;\r\n        }\r\n      }\r\n    }\r\n    this.adjacencyMatrix = math.matrix(adj)\r\n\r\n  }\r\n\r\n  newEdge(a,b){\r\n\r\n\r\n    let adj = this.adjacencyMatrix.valueOf()\r\n    if(adj[a][b] === 1 || adj[b][a] === 1) console.warn('There already exists an edge there! ('+a+','+b+') is already in the list of edges');\r\n    adj[a][b] = 1;\r\n    adj[b][a] = 1;\r\n    this.adjacencyMatrix = math.matrix(adj)\r\n  }\r\n\r\n  getAdjacencyMatrix(){\r\n    return this.adjacencyMatrix.valueOf()\r\n  }\r\n\r\n  constructor(inpAdjacencyMatrix){\r\n    //check the matrix for size & symmetry\r\n    let size = math.matrix(inpAdjacencyMatrix).size()\r\n    if(size[0] != size[1]){\r\n      throw new Error(\"Mishapen Adjacency Matrix :: The given matrix is \"+size[0]+\"x\"+size[1]+\", but it should be square (e.g. \"+size[0]+\"x\"+size[0]+\")\")\r\n    }\r\n    this.numVerticies = size[0];\r\n    for(let i = 0; i < this.numVerticies; i++){\r\n      for (let j = i; j < this.numVerticies; j++){\r\n        if (inpAdjacencyMatrix[i][j] != inpAdjacencyMatrix[j][i]){\r\n          throw new Error(\"Non-symmetric Adjacency Matrix :: The given value at \"+i+\",\"+j+\" should be equal to the value at \"+j+\",\"+i);\r\n        }\r\n      }\r\n    }\r\n\r\n    //apply constants\r\n    this.adjacencyMatrix = math.matrix(inpAdjacencyMatrix);\r\n    const singlestate = math.matrix([[1/math.sqrt(2)],[1/math.sqrt(2)]]);\r\n\r\n    //construct blank graph\r\n    this.state = singlestate;\r\n    for (let n = 0; n < this.numVerticies-1; n++){\r\n      this.state = math.kron(this.state,singlestate)\r\n    }\r\n\r\n    for(let edge of this.edges()){\r\n      console.log(\"performing cZ on (\"+edge[0]+\",\"+edge[1]+\")\")\r\n      this.cZ(edge[0], edge[1]);\r\n    }\r\n    console.log(\":: Blank Graph Construction Complete ::\");console.log()\r\n  }\r\n\r\n  getState(indexFormat='bin'){\r\n    var out = ''\r\n    for(let i = 0; i < math.pow(2,this.numVerticies); i++){\r\n      if (indexFormat == 'bin'){\r\n        var index = i.toString(2).padStart(this.numVerticies,'0');\r\n      }else{\r\n        var index = i\r\n      }\r\n      out = out.concat('|'+index+'>\\t' + this.state.subset(math.index(i,0))+'\\n')\r\n    }\r\n    return out\r\n  }\r\n\r\n\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { motion } from \"framer-motion\";\nimport GraphState from './backend.js';\n\n\nclass Button extends React.Component{\n  render(){\n    return (<td id={this.props.isSelected ? 'selectedTool':'unselectedTool'} className='toolbarCell' onClick = {(e) => {this.props.handleClick(e)}}>\n            <img src={'icons/icons_'.concat(this.props.id,'.png')} id={this.props.id} alt='' className='buttonImage'/>\n            </td>\n           );\n  }\n}\n\n\nclass FloatingToolBar extends React.Component{\n\n  render(){\n\n\n    let currentTool = this.props.selectedTool;\n    let clickHandler = this.props.clickHandler;\n\n    return (   <div className='toolbar'>\n                <table className=\"toolbarTable\">\n                <tbody>\n                  <tr>\n                    <Button id='settings' handleClick={this.clickHandler}/>\n                    <td colSpan='6'> <p className='titleText'> Cluster State Simulator </p> </td>\n                  </tr>\n                  <tr>\n\n                    <Button id='newParticle' isSelected= {currentTool == 'newParticle'} handleClick={clickHandler}/>\n\n                    <Button id='newEdge' isSelected= {currentTool == 'newEdge'} handleClick={clickHandler}/>\n\n                    <Button id='moveParticles' isSelected= {currentTool == 'moveParticles'} handleClick={clickHandler}/>\n\n                    <Button id='unitary' isSelected= {currentTool == 'unitary'} handleClick={clickHandler}/>\n\n                    <Button id='mx' isSelected= {currentTool == 'mx'} handleClick={clickHandler}/>\n\n                    <Button id='my' isSelected= {currentTool == 'my'} handleClick={clickHandler}/>\n\n                    <Button id='mz' isSelected= {currentTool == 'mz'} handleClick={clickHandler}/>\n\n                  </tr>\n                </tbody>\n                </table>\n              </div>\n\n\n  );\n  }\n}\n\n\nclass Particle extends React.Component{\n  constructor(props){\n    //Upon mounting into the DOM (always done at (0,0) position before being animated to 'initialX' and 'initialY'),\n    //create a position vector (stored in the ParticleCanvas)\n    super(props);\n    let info = this.props.info\n    info.onUpdate({x:0 , y:0},info.number)\n\n  }\n\n  render(){\n    const particleStyle = {\n      backgroundColor: 'blue',\n      borderRadius: '50%',\n      width: \"10vh\",\n      height: \"10vh\",\n      position: 'fixed',\n      top: '0vh',\n      left: '0vw',\n      border: '1vh solid #000'\n      };\n    const textStyle = {\n      textAlign: 'center',\n      verticalAlign:'middle',\n      lineHeight:'50%',\n      color:'white',\n      fontSize:'4vh',\n      pointerEvents:'none'\n    }\n    let info = this.props.info\n\n    return (<motion.div onUpdate = {(latest,id)=>info.onUpdate(latest,info.number)}\n                        animate = {{x: info.initialX, y: info.initialY}}\n                        style={particleStyle}\n                        drag={info.draggable}\n                        dragConstraints={info.particleBox}\n                        onClick = {(event,id)=>this.props.clickHandler(event,info.number)}>\n\n              <p id = 'particleText' style = {textStyle}>{info.number}</p>\n\n            </motion.div>\n          );\n  }\n}\n\n\n\nclass Edge extends React.Component{\n  render(){\n    //make the code less messy\n    let v1 = this.props.firstVertex;\n    let v2 = this.props.secondVertex;\n\n    return <motion.line transition = {{duration:2}}\n                 x1={\"calc(\"+ v1.x + \"px + 6vh)\"}\n                 y1={\"calc(\"+ v1.y + \"px + 6vh)\"}\n                 x2={\"calc(\"+ v2.x + \"px + 6vh)\"}\n                 y2={\"calc(\"+ v2.y + \"px + 6vh)\"} />;\n\n  }\n}\n\n\nclass ParticleCanvas extends React.Component{\n  constructor(props){\n    super(props);\n    let g = new GraphState(this.props.adjacencyMatrix)\n    this.state = {\n      positionTable : {},\n      graph : g,\n      edges : g.edges(),\n      mxhelper: [undefined, false],\n      edgehelper: [undefined,false]\n    };\n    this.particleClickHandler = this.particleClickHandler.bind(this)\n    this.onUpdate = this.onUpdate.bind(this)\n  }\n\n  onUpdate(latest,id){\n    //console.time('updating table '+id)\n    //(1) Make a copy of the positioning table, so that we can make edits and then replace the old table in the state\n    let copyTable = this.state.positionTable;\n    //(2) Slap in the new data, first making sure that there is new data to add\n    let xVal = (typeof latest.x  !== 'undefined') ? latest.x : copyTable[id]['x'];\n    let yVal = (typeof latest.y  !== 'undefined') ? latest.y : copyTable[id]['y'];\n    copyTable[id] = {x:xVal,y:yVal};\n    //(3) Replace the old table in the state\n    this.setState({positionTable : copyTable})\n\n    //console.timeEnd('updating table '+id)\n  }\n\n  particleClickHandler(event,id){\n\n    //prevent special neighbor particle selection after tool switching\n    if(this.props.selectedTool !== 'mx'){\n      this.setState({mxhelper:[undefined, false]})\n    }\n    //prevent edge creation on second particle selection after tool switching\n    if(this.props.selectedTool !== 'newEdge'){\n      this.setState({edgehelper:[undefined, false]})\n    }\n\n    //Z-axis measurement\n    if (this.props.selectedTool === 'mz'){\n      console.log('measurement in z direction initiated by click on particle #'+id);\n      let g = this.state.graph;\n      g.measureZ(id);\n      this.setState({graph:g, edges:g.edges()});\n\n    }\n\n    //Y-axis measurement\n    if (this.props.selectedTool === 'my'){\n      console.log('measurement in y direction initiated by click on particle #'+id);\n      let g = this.state.graph;\n      g.measureY(id);\n      this.setState({graph:g, edges:g.edges()});\n    }\n\n    //X-axis measurement\n    if (this.props.selectedTool === 'mx' && !this.state.mxhelper[1]){\n      console.log('measurement in x direction initiated by click on particle #'+id+\" measurement will begin once a second particle is selected\");\n      this.setState({mxhelper:[id,true]});\n    }\n    else if (this.props.selectedTool === 'mx' && this.state.mxhelper[1]){\n      console.log('measurement in x direction initiated with special neighbor #'+id);\n      let g = this.state.graph;\n      g.measureX(this.state.mxhelper[0],id);\n      this.setState({graph:g, edges:g.edges()});\n      this.setState({mxhelper:[undefined,false]});\n    }\n\n    //Edge Creation\n    if (this.props.selectedTool === 'newEdge' && !this.state.edgehelper[1]){\n      console.log('edge creation initiated by click on particle #'+id+\" creation will begin once a second particle is selected\");\n      this.setState({edgehelper:[id,true]});\n    }\n    else if (this.props.selectedTool === 'newEdge' && this.state.edgehelper[1]){\n      console.log('edge creation initiated with new neighbor #'+id);\n      let g = this.state.graph;\n      g.newEdge(this.state.edgehelper[0],id);\n      this.setState({graph:g, edges:g.edges()});\n      this.setState({edgehelper:[undefined,false]});\n    }\n  }\n\n  render(){\n\n    console.time('Render Loop Completed')\n    let particlesToRender = [];\n    let edgesToRender = [];\n    let max = this.state.graph.getAdjacencyMatrix().length;\n\n    for (let i = 0; i < max; i++){\n      let column = i*150+300;\n      let row = Math.floor(i/5)*150 + 300;\n      let particleInfo = {\n        number : i,\n        initialX : column,\n        initialY : row+Math.cos(2*i/Math.PI)*150,\n        particleBox : this.props.container,\n        draggable : this.props.canDrag,\n        onUpdate : this.onUpdate\n      };\n      particlesToRender.push(<Particle info = {particleInfo} key = {particleInfo.number.toString()} clickHandler = {this.particleClickHandler}/>);\n    }\n    //console.log(this.state.edges)\n    for(let node of this.state.edges){\n      //console.log((this.state.positionTable[node[0]] !== undefined) ? this.state.positionTable[node[0]].x : \"aaabbbccc\")\n      let table = this.state.positionTable;\n      if (typeof table !== 'undefined' && typeof table[node[0]] !== 'undefined' && typeof table[node[1]] !== 'undefined'){\n        edgesToRender.push(<Edge firstVertex = {table[node[0]]} secondVertex = {table[node[1]]} key = {'edge ('+node[0]+','+node[1]+')'}/>)\n      }\n    }\n\n    console.timeEnd(\"Render Loop Completed\")\n    return(\n      <div onClick={this.newParticle}>\n\n        {particlesToRender}\n        <svg>\n          {edgesToRender}\n        </svg>\n      </div>\n    );\n\n  }\n}\n\n\n\n\n\n\n\n///////////////////////////////////////////////\n////    Begin the basic  app rendering     ////\n//////////////////////////////////////////////\n\n\n\n\n\n\n\nclass Page extends React.Component{\n  constructor(props){\n    super(props);\n    this.page = React.createRef();\n    this.state = {selectedTool    : 'newParticle',\n                  adjacencyMatrix : [[0,1,1,0,1],\n                                     [1,0,1,0,0],\n                                     [1,1,0,1,0],\n                                     [0,0,1,0,1],\n                                     [1,0,0,1,0]]}\n    this.toolbarClickHandler = this.toolbarClickHandler.bind(this);\n  }\n\n  toolbarClickHandler(event){\n    this.setState({selectedTool : event.target.getAttribute(\"id\")}, () => console.log(\"tool switched to: \"+this.state.selectedTool));\n  }\n\n  render(){\n\n    return (\n      <div id = \"page\" ref = {this.page}>\n        <FloatingToolBar container = {this.page}\n                         selectedTool = {this.state.selectedTool}\n                         clickHandler = {this.toolbarClickHandler}/>\n\n\n        <ParticleCanvas container = {this.page}\n                        selectedTool = {this.state.selectedTool}\n                        canDrag = {this.state.selectedTool == 'moveParticles'}\n                        adjacencyMatrix = {this.state.adjacencyMatrix}/>\n      </div>\n    );\n  }\n}\n\n\nfunction App() {\n  return (\n    <Page/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}